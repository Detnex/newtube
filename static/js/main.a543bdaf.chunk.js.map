{"version":3,"sources":["components/card.js","components/cardlist.js","components/scroll.js","components/searchbox.js","videos.js","components/body.js","components/main.js","components/welcome.js","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","name","src","id","username","react_default","a","createElement","className","ReactPlayer_default","url","controls","width","height","onStart","fetch","method","headers","Content-Type","body","JSON","stringify","vplay","then","response","json","res","console","log","Cardlist","videos","map","user","i","card","key","Scroll","props","style","overflowY","border","children","Searchbox","searchfield","searchChange","savedata","data","suggest","sort","filter","v","indexOf","type","placeholder","onChange","item","onClick","Body","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","onSaveData","state","search","ispage","change","_this2","filteredvideos","toLowerCase","includes","length","searchbox","components_scroll","cardlist","Component","Main","_this$props","logout","forEach","data1","push","concat","toUpperCase","Welcome","isLoggedIn","responseGoogle","profileObj","givenName","google_login_default","clientId","buttonText","onSuccess","onFailure","cookiePolicy","main","App","welcome","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2TA6BeA,EA1BF,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,KAAKC,EAAsBF,EAAtBE,IAAIC,EAAkBH,EAAlBG,GAAGC,EAAeJ,EAAfI,SAcxB,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAaI,IAAMR,EAAMS,UAAU,EAAQC,MAAM,OAAOC,OAAO,OAAOC,QAd9D,WACRC,MAAM,8BAA8B,CAChCC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACrBC,MAAMpB,MAGRqB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC3BF,KAAK,SAAAG,GAAG,OAAIC,QAAQC,IAAIF,QAMzBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVP,EADL,IACWI,EAAAC,EAAAC,cAAA,WACNJ,EAFL,IAESE,EAAAC,EAAAC,cAAA,WACJH,KCAEyB,EApBE,SAAA7B,GAAgB,IAAb8B,EAAa9B,EAAb8B,OACjB,OACCzB,EAAAC,EAAAC,cAAA,WAEMuB,EAAOC,IAAI,SAACC,EAAOC,GACjB,OACE5B,EAAAC,EAAAC,cAAC2B,EAAD,CACCC,IAAKF,EACL9B,GAAI2B,EAAOG,GAAG9B,GACdF,KAAM6B,EAAOG,GAAGhC,KAChBC,IAAK4B,EAAOG,GAAG/B,IACfE,SAAU0B,EAAOG,GAAG7B,eCJnBgC,EARD,SAACC,GACZ,OACIhC,EAAAC,EAAAC,cAAA,OAAK+B,MAAS,CAAEC,UAAW,SAASC,OAAQ,uBAAuB3B,OAAQ,UACrEwB,EAAMI,WCwBLC,SA1BG,SAAA1C,GAA+CA,EAA7C2C,YAA6C,IAAjCC,EAAiC5C,EAAjC4C,aAAaC,EAAoB7C,EAApB6C,SAASC,EAAW9C,EAAX8C,KAE9CC,EAAU,GACdA,EAAUD,EAAKE,OAAOC,OAAO,SAACC,EAAEjB,GAAH,OAASa,EAAKK,QAAQD,KAAOjB,IAO1D,OACC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SACEC,UAAY,wCACZ4C,KAAK,SACLC,YAAY,gBACZC,SAAYV,IAEZvC,EAAAC,EAAAC,cAAA,UACMwC,EAAQhB,IAAI,SAACwB,GAAD,OAAUlD,EAAAC,EAAAC,cAAA,MAAIiD,QAAS,kBAAgBD,EAb1CA,OAakDA,MAEjElD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuCgD,QAASX,GAAlE,aCxBMf,EAAS,CAEtB,CACE3B,GAAI,EACJF,KAAM,UACNG,SAAU,UACVF,IAAK,uBAEP,CACEC,GAAI,EACJF,KAAM,MACNG,SAAU,MACVF,IAAK,mBAEP,CACEC,GAAI,EACJF,KAAM,QACNG,SAAU,UACVF,IAAK,qBAEP,CACEC,GAAI,EACJF,KAAM,SACNG,SAAU,SACVF,IAAK,sBAEP,CACEC,GAAI,EACJF,KAAM,OACNG,SAAU,OACVF,IAAK,oBAEP,CACEC,GAAI,EACJF,KAAM,SACNG,SAAU,SACVF,IAAK,sBAEP,CACEC,GAAI,EACJF,KAAM,SACNG,SAAU,SACVF,IAAK,sBAEP,CACEC,GAAI,EACJF,KAAM,OACNG,SAAU,OACVF,IAAK,oBAEP,CACEC,GAAI,EACJF,KAAM,UACNG,SAAU,UACVF,IAAK,uBAEP,CACEC,GAAI,GACJF,KAAM,MACNG,SAAU,MACVF,IAAK,mBAEP,CACEC,GAAI,GACJF,KAAM,OACNG,SAAU,OACVF,IAAK,qBCIMuD,cA/DZ,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaJI,eAAiB,SAACC,GACbR,EAAKS,SAAS,CAAExB,YAAauB,EAAME,OAAOC,SAfjCX,EAkBdY,WAAa,SAACjC,GACVqB,EAAKS,SAAS,CAACrB,KAAKY,EAAKa,MAAM5B,cAC/B5B,MAAM,+BAA+B,CACjCC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAClBmD,OAAOd,EAAKa,MAAM5B,gBAGvBpB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAG,OAAIC,QAAQC,IAAIF,KACzBgC,EAAKS,SAAS,CAACM,QAAO,KA7Bbf,EAgCdgB,OAAS,SAACrC,GACPqB,EAAKS,SAAS,CAACM,QAAO,KA/BrBf,EAAKa,MAAQ,CACTzC,OAAQ,GACRa,YAAY,GACZG,KAAK,GACL2B,QAAQ,GANFf,mFAWRG,KAAKM,SAAS,CAAErC,OAAQA,qCAyBrB,IAAA6C,EAAAd,KACIvD,EAAMuD,KAAKxB,MAAX/B,EACDsE,EAAiBf,KAAKU,MAAMzC,OAAOmB,OAAQ,SAAAnB,GACjD,OAAOA,EAAO7B,KAAK4E,cAAcC,SAASH,EAAKJ,MAAMzB,KAAK+B,iBAE3D,OAAgC,IAA7BhB,KAAKU,MAAMzC,OAAOiD,OACV1E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,WAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,IAAuBqD,KAAKU,MAAME,OAC7BpE,EAAAC,EAAAC,cAACyE,EAAD,CAAWpC,aAAciB,KAAKI,eAAgBpB,SAAUgB,KAAKS,WAAYxB,KAASxC,IAEnFD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQiD,QAAUK,KAAKa,OAASlE,UAAU,yCAA1C,UACAH,EAAAC,EAAAC,cAAC0E,EAAD,KACA5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAUpD,OAAW8C,cArDnBO,aCuCJC,mLApCF,IAAAC,EACkBxB,KAAKxB,MAArBpC,EADFoF,EACEpF,KAAKqF,EADPD,EACOC,OACDhF,EAAI,GAmBlB,OAlBSS,MAAM,8BAA8B,CACnCC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBpB,KAAOA,MAEVsB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAC,GACpCA,GACCT,MAAM,6BAA6B,IAAIQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAChEF,KAAK,SAAAG,GAAG,OAAIA,EAAI6D,QAAQ,SAACC,GACjBlF,EAAEmF,KAAKD,SAMtB7D,QAAQC,IAAItB,GAGVD,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAClBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4CAA4CgD,QAAU8B,GAAxE,WAEEjF,EAAAC,EAAAC,cAAA,qBAAAmF,OAAiBzF,EAAK0F,cAAtB,MACEtF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACY,EAAD,CAAMb,EAAMA,aAhCf6E,aC4CJS,cA3CV,SAAAA,IAAe,IAAAlC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACdlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,QAOFyB,OAAS,SAACjD,GACRqB,EAAKS,SAAS,CAAE0B,YAAW,IAC3B9E,MAAM,6BAA6B,IAAIQ,KAAK,SAAAG,GAAG,OAAIA,EAAID,UARvDiC,EAAKa,MAAQ,CACZtE,KAAM,GACN4F,YAAY,GAJCnC,wEAaT,IAAAiB,EAAAd,KACOiC,EAAiB,SAACtE,GAC1BmD,EAAKR,SAAS,CAAElE,KAAMuB,EAASuE,WAAWC,UAAWH,YAAY,KAIxE,OACGxF,EAAAC,EAAAC,cAAA,WACKsD,KAAKU,MAAMsB,WACRxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,mCACIF,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CACE4F,SAAS,2EACTC,WAAW,QACXC,UAAaN,EACbO,UAAaP,EACbQ,aAAc,uBAEhBjG,EAAAC,EAAAC,cAAA,sCAGLF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACgG,EAAD,CAAMtG,KAAS4D,KAAKU,MAAMtE,KAAOqF,OAAWzB,KAAKyB,kBApCzCH,aCQPqB,MARf,WACE,OACEnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZH,EAAAC,EAAAC,cAACkG,EAAD,QCIaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECRNC,IAASC,OAAO3G,EAAAC,EAAAC,cAAC0G,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/F,KAAK,SAAAgG,GACjCA,EAAaC","file":"static/js/main.a543bdaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst Card = ({ name,src,id,username }) => {\r\n     \r\n   const play = () => {\r\n        fetch('http://localhost:3001/vplay',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            vplay:src\r\n              })\r\n        })\r\n         .then(response => response.json())\r\n        .then(res => console.log(res))\r\n     }\r\n\r\n    return (\r\n    <div className='tc dib pa2 ma2 bw2 shadow-3 h-25 w-25' >\r\n        <ReactPlayer url={ src } controls={true}   width='100%' height='100%' onStart={ play } />\r\n        <div className='Times f4 lh-copy i'>\r\n            {name} <br/>\r\n            {id} <br/>\r\n            {username}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst Cardlist = ({ videos }) => {\r\n   return (\r\n    <div>\r\n       {\r\n          videos.map((user , i) => {\r\n            return ( \r\n              <Card\r\n               key={i} \r\n               id={videos[i].id} \r\n               name={videos[i].name} \r\n               src={videos[i].src} \r\n               username={videos[i].username}\r\n               />\r\n            );\r\n         })\r\n       }    \r\n    </div>\r\n   );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{ overflowY: 'scroll',border: '1px solid light-grey',height: '700px' }}>\r\n             {props.children}\r\n        </div>\r\n    );\r\n};  \r\n\r\n export default Scroll;","import React from 'react';\r\nimport './style.css'\r\n\r\nconst Searchbox = ({searchfield,searchChange,savedata,data }) => {\r\n    \r\n    let suggest = [];\r\n    suggest = data.sort().filter((v,i) => data.indexOf(v) === i);\r\n     \r\n    const onClicked = (props) => {\r\n        const a = props.item;\r\n        return(a);\r\n    }\r\n\r\n    return (\r\n     <div className='pa2 autocomplete'> \r\n       <input \r\n         className = 'pa3 ba b--green bg-lightest-blue w-50'\r\n         type='search' \r\n         placeholder='search videos'\r\n         onChange = {searchChange}\r\n         />\r\n         <ul> \r\n             { suggest.map((item) => <li onClick={() => onClicked(item)}>{item}</li> )}\r\n         </ul>\r\n         <button className='pa3 ba b--blue bg-lightest-green ma3' onClick={savedata}>Search</button>\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","  export const videos = [\r\n  \r\n  {\r\n    id: 1,\r\n    name: 'bonfire',\r\n    username: 'Bonfire',\r\n    src: '/Videos/bonfire.mp4'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'sky',\r\n    username: 'Sky',\r\n    src: '/Videos/sky.mp4'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'BUNNY',\r\n    username: 'Big bug',\r\n    src: '/Videos/bunny.mp4'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'cactus',\r\n    username: 'Cactus',\r\n    src: '/Videos/cactus.mp4'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'snow',\r\n    username: 'Snow',\r\n    src: '/Videos/snow.mp4'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'desert',\r\n    username: 'Desert',\r\n    src: '/Videos/desert.mp4'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'forest',\r\n    username: 'Forest',\r\n    src: '/Videos/forest.mp4'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'land',\r\n    username: 'Land',\r\n    src: '/Videos/land.mp4'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'seaface',\r\n    username: 'Seaface',\r\n    src: '/Videos/seaface.mp4'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'sky',\r\n    username: 'Sky',\r\n    src: '/Videos/sky.mp4'\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'snow',\r\n    username: 'Snow',\r\n    src: '/Videos/snow.mp4'\r\n  }\r\n];","import React,{ Component } from 'react';\r\nimport Cardlist from './cardlist';\r\nimport Scroll from './scroll'\r\nimport Searchbox from './searchbox';\r\nimport { videos } from '../videos';\r\n\r\nclass Body extends Component {\r\n   constructor () {\r\n        super();\r\n        this.state = {\r\n            videos: [],\r\n            searchfield:'',\r\n            data:'',\r\n            ispage: false\r\n        }\r\n    }\r\n     \r\n       componentDidMount () {\r\n          this.setState({ videos: videos })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n         this.setState({ searchfield: event.target.value })\r\n    } \r\n\r\n    onSaveData = (props) => {\r\n        this.setState({data:this.state.searchfield})\r\n        fetch('http://localhost:3001/search',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n               search:this.state.searchfield\r\n            })\r\n        })\r\n         .then(response => response.json())\r\n         .then(res => console.log(res))\r\n         this.setState({ispage:false})\r\n    }\r\n\r\n    change = (props) => {\r\n       this.setState({ispage:true})\r\n    }\r\n    \r\n    render() {\r\n         const { a } = this.props;\r\n          const filteredvideos = this.state.videos.filter( videos =>{\r\n          return videos.name.toLowerCase().includes(this.state.data.toLowerCase());\r\n         })\r\n         if(this.state.videos.length === 0) {\r\n             return <h1 className='tc'>Loading</h1>\r\n         } \r\n         else {\r\n        return(\r\n            <div className='tc'> { this.state.ispage ? (\r\n                 <Searchbox searchChange={this.onSearchChange} savedata={this.onSaveData} data = { a } />      \r\n              ) : (\r\n                <div>\r\n                 <button onClick={ this.change } className='f6 link dim ph3 pv2 mb2 white bg-blue'>SEARCH</button>\r\n                 <Scroll>\r\n                 <Cardlist videos = { filteredvideos } />\r\n                 </Scroll>\r\n                </div> \r\n              )}\r\n             \r\n            </div>  \r\n          );\r\n         }\r\n    }\r\n}\r\n\r\nexport default Body","import React,{ Component } from 'react';\r\nimport Body from './body.js'\r\n\r\n\r\n\r\nclass Main extends Component {\r\n     \r\n \r\n\r\n    render() {\r\n       const { name,logout } = this.props\r\n             const a = [];\r\n              fetch('http://localhost:3001/login',{\r\n               method: 'post',\r\n               headers: {'Content-Type': 'application/json'},\r\n               body: JSON.stringify({\r\n                 name : name\r\n            })\r\n           }).then(response => response.json()).then(response => {\r\n              if(response) {\r\n                  fetch('http://localhost:3001/data',{}).then(response => response.json())\r\n                  .then(res => res.forEach((data1) => {\r\n                           a.push(data1);\r\n\r\n                  } ));\r\n              }\r\n\r\n           })\r\n            console.log(a);   \r\n\r\n    \treturn (\r\n              <div>\r\n                 <div className='ph3 tr mt5 '>\r\n\t\t            <button className=\"f6 link dim ph3 pv2 mb2 white bg-hot-pink\" onClick={ logout }>Logout</button>\r\n\t\t\t      </div>\r\n              \t <h1>{`Welcome ${ name.toUpperCase() } `}</h1>\r\n              \t   <div> \r\n                      <Body a = { a }/>\r\n                   </div>  \r\n              </div>\r\n         \t\t)\r\n    }\r\n     \r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Main from './main';\r\n\r\n\r\nclass Welcome extends Component {\r\n     constructor () {\r\n     \tsuper() \r\n     \tthis.state = {\r\n     \t\tname: '',\r\n     \t\tisLoggedIn: true\r\n     \t}\r\n     }\r\n    \r\n    logout = (props) => {\r\n      this.setState({ isLoggedIn:true })\r\n      fetch('http://localhost:3001/home',{}).then(res => res.json());\r\n    }  \r\n\r\n\t render() {\r\n            const responseGoogle = (response) => {\r\n\t\t        this.setState({ name: response.profileObj.givenName, isLoggedIn: false })\r\n\t\t      \r\n\t\t     } \r\n  \r\n\t \treturn(\r\n      <div>\r\n         { this.state.isLoggedIn ? (\r\n              <div className=\"container1\"> \r\n              <h1>Welcome to timble App</h1>\r\n                  <GoogleLogin\r\n                    clientId=\"817702232444-fbc6gtnuttmmf19to516thccsrnragfq.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess = {responseGoogle}\r\n                    onFailure = {responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                  />\r\n                  <h1>You need to Login first</h1>\r\n                </div>  \r\n          ) : (\r\n             <div>\r\n              <Main name = { this.state.name } logout = { this.logout } />\r\n             </div> \r\n            )}\r\n        </div>    \r\n\t \t\t) \r\n\t }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\nimport './App.css';\nimport Welcome from './components/welcome'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Welcome />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}