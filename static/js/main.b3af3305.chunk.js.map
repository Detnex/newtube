{"version":3,"sources":["components/card.js","components/cardlist.js","components/scroll.js","components/searchbox.js","components/body.js","components/main.js","components/welcome.js","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","vid","react_default","a","createElement","className","ReactPlayer_default","url","concat","slice","controls","width","height","onPlay","fetch","method","headers","Content-Type","body","JSON","stringify","vplay","then","response","json","res","console","log","Cardlist","video","map","user","i","card","key","Scroll","props","style","overflowY","border","children","Searchbox","searchfield","searchChange","savedata","index_min_default","type","placeholder","onChange","onEnter","onSearchClick","Body","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","onSaveData","data","state","videos","length","search","vurl","ispage","change","searchbox","components_scroll","cardlist","Component","Main","_this$props","name","logout","onClick","toUpperCase","Welcome","isLoggedIn","_this2","responseGoogle","profileObj","givenName","google_login_default","clientId","buttonText","onSuccess","onFailure","cookiePolicy","main","App","welcome","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3af3305.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst Card = ({ vid }) => {\r\n // console.log(vide);\r\n  //vide.map((item) => console.log(item.slice(2,-2)))     \r\n   const play = () => {\r\n        fetch('http://localhost:3001/vplay',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            vplay:vid\r\n              })\r\n        })\r\n         .then(response => response.json())\r\n        .then(res => console.log(res))\r\n     }  \r\n\r\n    return ( \r\n    <div className='tc dib pa2 ma2 bw2 shadow-3 h-25 w-25'>\r\n        <ReactPlayer url={ `https://www.youtube.com/watch?v=${vid.slice(1,-1)}` } controls={true}   width='100%' height='100%' onPlay={play}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst Cardlist = ({ video }) => {\r\n  \r\n  return ( \r\n        <div>\r\n      {\r\n        video.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              vid={video[i]}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>     \r\n          )\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{ overflowY: 'scroll',border: '1px solid light-grey',height: '700px' }}>\r\n             {props.children}\r\n        </div>\r\n    );\r\n};  \r\n\r\n export default Scroll;","import React from 'react';\r\nimport './style.css'\r\nimport SearchField from 'react-search-field';\r\n\r\nconst Searchbox = ({ searchfield,searchChange,savedata }) => {\r\n    \r\n    //suggest = data.sort().filter((v,i) => data.indexOf(v) === i);\r\n     \r\n    //const onClicked = (props) => {\r\n      //  const a = props.item;\r\n        //return(a);\r\n    //}\r\n\r\n    return (\r\n     <div className='pa2 autocomplete'> \r\n       <SearchField \r\n         className = 'pa3 ba b--green bg-lightest-blue w-50 test-class'\r\n         type='search' \r\n         placeholder='search videos'\r\n         onChange = {searchChange}\r\n         onEnter = {savedata}\r\n           onSearchClick={savedata}\r\n         />\r\n        \r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React,{ Component } from 'react';\r\nimport Cardlist from './cardlist';\r\nimport Scroll from './scroll'\r\nimport Searchbox from './searchbox';\r\n\r\nclass Body extends Component {\r\n   constructor () {\r\n        super();\r\n        this.state = {\r\n             videos: [],\r\n            searchfield:'',\r\n            data:'',\r\n            ispage: true\r\n        }\r\n    }\r\n     \r\n    onSearchChange = (event) => {\r\n         this.setState({ searchfield: event });\r\n    } \r\n\r\n    onSaveData = (props) => {\r\n        this.setState({data:this.state.searchfield})\r\n      if(this.state.videos.length === 0) {\r\n           \r\n            fetch('http://localhost:3001/search',{\r\n            method: 'post', \r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n               search:this.state.searchfield\r\n            })\r\n        })\r\n         .then(response => response.json())\r\n         .then(res => {\r\n             this.setState({\r\n                 videos: res.vurl\r\n             })\r\n         })  \r\n      }  else {\r\n              this.state.videos.length = 0;\r\n             fetch('http://localhost:3001/search',{\r\n            method: 'post', \r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n               search:this.state.searchfield\r\n            })\r\n        })\r\n         .then(response => response.json())\r\n         .then(res => {\r\n             this.setState({\r\n                 videos: res.vurl\r\n             })\r\n         })  \r\n      }\r\n      \r\n         this.setState({ispage:false})\r\n         \r\n\r\n    }\r\n\r\n\r\n    change = (props) => {\r\n       this.setState({ispage:true})\r\n    }\r\n\r\n    render() {\r\n       const { videos } = this.state ;\r\n       //   const filteredvideos = videos.filter( videos =>{\r\n         // return videos.name.toLowerCase().includes(this.state.data.toLowerCase());\r\n          //}) \r\n        return(\r\n            <div className='tc'> \r\n                 <Searchbox searchChange={this.onSearchChange} savedata={this.onSaveData} />      \r\n              <div>\r\n          {// <button onClick={ this.change } className='f6 link dim ph3 pv2 mb2 white bg-blue'>SEARCH</button>     \r\n                      }    \r\n                 <Scroll>\r\n                   <Cardlist video = { videos } /> \r\n                 </Scroll>\r\n              </div>\r\n              </div> \r\n         )}\r\n}\r\n\r\nexport default Body","import React,{ Component } from 'react';\r\nimport Body from './body.js'\r\n\r\n\r\n\r\nclass Main extends Component {\r\n     \r\n \r\n\r\n    render() {\r\n       const { name,logout } = this.props\r\n              fetch('http://localhost:3001/login',{\r\n               method: 'post',\r\n               headers: {'Content-Type': 'application/json'},\r\n               body: JSON.stringify({\r\n                 name : name\r\n            })\r\n           }).then(response => response.json())\r\n\r\n    \treturn (\r\n              <div>\r\n                 <div className='ph3 tr mt5 '>\r\n\t\t            <button className=\"f6 link dim ph3 pv2 mb2 white bg-hot-pink\" onClick={ logout }>Logout</button>\r\n\t\t\t      </div>\r\n              \t <h1>{`Welcome ${ name.toUpperCase() } `}</h1>\r\n              \t   <div> \r\n                      <Body />\r\n                   </div>  \r\n              </div>\r\n         \t\t)\r\n    }\r\n     \r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Main from './main';\r\n\r\n\r\nclass Welcome extends Component {\r\n     constructor () {\r\n     \tsuper() \r\n     \tthis.state = {\r\n     \t\tname: '',\r\n     \t\tisLoggedIn: true\r\n     \t}\r\n     }\r\n    \r\n    logout = (props) => {\r\n      this.setState({ isLoggedIn:true })\r\n      fetch('http://localhost:3001/logout',{}).then(res => res.json());\r\n    }  \r\n\r\n\t render() {\r\n            const responseGoogle = (response) => {\r\n\t\t        this.setState({ name: response.profileObj.givenName, isLoggedIn: false })\r\n\t\t      \r\n\t\t     } \r\n  \r\n\t \treturn(\r\n      <div>\r\n         { this.state.isLoggedIn ? (\r\n              <div className=\"container1\"> \r\n              <h1>Welcome to the App</h1>\r\n                  <GoogleLogin\r\n                    clientId=\"817702232444-fbc6gtnuttmmf19to516thccsrnragfq.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess = {responseGoogle}\r\n                    onFailure = {responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                  />\r\n                  <h1>You need to Login first</h1>\r\n                </div>  \r\n          ) : (\r\n             <div>\r\n              <Main name = { this.state.name } logout = { this.logout } />\r\n             </div> \r\n            )}\r\n        </div>    \r\n\t \t\t) \r\n\t }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\nimport './App.css';\nimport Welcome from './components/welcome'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Welcome />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}